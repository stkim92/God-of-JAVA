Chap 11

1. 상속은 다단계로

2. 객체를 그냥 출력하는것이랑 toString을 하는것이랑 같다 o x 
   -> o 324p

3. toString을을 오버라이드하면 객체만 출력해도 toString에정의된것이 수행됨 o x
   -> o

4. == != 는 네모를 비교하는 것이다 - 주소값 329p 

5. 같은 클래스, 매개변수가 같은 생성자로 2개의 객체를 만들었다, 이때 매개변수가 같으면 같게 출력하는 방법은?
   -> 기본적으로 객체는 equals함수를 써야하며, equals함수를 오버라이딩해서 매개변수별로 비교하는 함수를 오버라이딩해야함


Chap 12


1. 인터페이르와 앱스트랙을 사용하는 이유
   -> 설계시 선언해두면 기능을 구현하는데만 집중할수있음, 개발자의 역량에따라 메소드이름,매개변수선언등 격차줄임
   -> 공통적인 인터페이스와 앱스트랙을 만들어놓으면 선언과 구현을 구분할수있음

2. 정의는 interface 예약어를 이용하여, 사용은 implements 예약어를 사용하여 가능 다수 가능 o x
   -> o 상속이 아니므로 여러개 가능

3. public class MemberManager implements MemberManagerInterface{ } 이에 해당하는 객체를 만들어보세요
   -> MemberManagerInterface Manager = new MemberManager();

4. 인터페이스의 변수는 어떤것이 자동으로 선언되나요 ? 
   -> public static final

   그렇다면 메소드는? 
   -> public abstract

5. abstract 는 public 와  class 사이에 작성

6. abstract 클래스 안에는 abstract로 선언된 메소드가 1개이상이면 된다? o x
   -> x : 0개

7. abstract로 선언된 메소드가 하나라도 있으면 그클래스는 반드시 앱스트랙이어야 하나요? o x
   -> o

8. final 이나 static 예약어를 사용할수 있나요?

9. 왜 abstract를 만들엇나요?
   -> 인터페이스를 사용하다보니, 어떤 메소드는 미리 구현해놔도 무방 그렇다고 클래스를 만들기도 애매 이럴때 공통적인
      부분을 구현해 놓으려고

10. final 은 어디어디?
   -> 클래스 메소드 변수

11. final로 선언된 클래스는 상속할수잇나요? o x
   -> x

12. 그렇다면 final을 클래스에 사용하는이유
   -> 더이상 확장해서는 안되는 클래스, 누군가 이클래스를 상속받아서 내용을 변경해서는 안되는 클래스일경우 사용

13. 메소드를 final러 사용하면 어떻게 되나요 어떤것을 할수없나요
   -> 오버라이딩을 못함

14. final을 변수에 사용할때에 인스턴스 변수나 스태틱으로 선언된 클래스변수는 선언과 함께 값을 지정해야함 o x
   -> o

15. 그렇다면 지역변수나 매개변수도 선언과 함께 값을 지정? o x
   -> x : 그러나 재할당은 에러

16. final로선언된 클래스의 객체를 생성하고 이 객체의 변수들은 변경가능? o x
   -> o 클래스가 final이라고 변수도 final은 아님

17. 366p 질문

18. enum클래스 생성자는 package-private와 private만 접근제어자로 가능

19. enum사용할때는 마음대로 extends안댐 왜냐면 이미 java.lang.Enum을 estends하기때문 

20. 또 누가 만들어놓은 이넘을 익스텐즈 할수 없음 